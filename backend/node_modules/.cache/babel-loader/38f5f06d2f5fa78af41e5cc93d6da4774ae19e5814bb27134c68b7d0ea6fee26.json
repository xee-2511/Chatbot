{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\weather_chatbot\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        text: input,\n        sender: \"user\"\n      }]);\n      setInput(\"\");\n      // Bot reply\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: \"Hello! I am a bot ðŸ¤–\",\n          sender: \"bot\"\n        }]);\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}-message`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","sendMessage","trim","text","sender","setTimeout","prev","className","children","map","msg","i","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/weather_chatbot/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ChatBot.css\";\r\n\r\nexport default function ChatBot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { text: input, sender: \"user\" }]);\r\n      setInput(\"\");\r\n      // Bot reply\r\n      setTimeout(() => {\r\n        setMessages((prev) => [...prev, { text: \"Hello! I am a bot ðŸ¤–\", sender: \"bot\" }]);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.sender}-message`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAEJ,KAAK;QAAEK,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MAC3DJ,QAAQ,CAAC,EAAE,CAAC;MACZ;MACAK,UAAU,CAAC,MAAM;QACfP,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEH,IAAI,EAAE,sBAAsB;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MACnF,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BX,QAAQ,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnBjB,OAAA;QAAaa,SAAS,EAAE,WAAWG,GAAG,CAACN,MAAM,UAAW;QAAAI,QAAA,EACrDE,GAAG,CAACP;MAAI,GADDQ,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bd,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIrB,WAAW,CAAC,CAAE;QACtDsB,WAAW,EAAC;MAAmB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFrB,OAAA;QAAQ8B,OAAO,EAAEvB,WAAY;QAAAO,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CApCuBD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}