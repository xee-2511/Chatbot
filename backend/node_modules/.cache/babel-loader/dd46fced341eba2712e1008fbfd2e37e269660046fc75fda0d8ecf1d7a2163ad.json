{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\weather_chatbot\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi! Tell me a movie genre (like action, comedy, horror).\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const TMDB_API_KEY = \"ec6c2a746087c45423e615ea556b7e4a\"; // replace with your TMDB key\n\n  const fetchMovies = async genre => {\n    try {\n      // Map genre names to TMDB genre IDs\n      const genreMap = {\n        action: 28,\n        comedy: 35,\n        horror: 27,\n        romance: 10749,\n        drama: 18,\n        animation: 16,\n        thriller: 53,\n        adventure: 12,\n        fantasy: 14,\n        sciencefiction: 878\n      };\n      const genreId = genreMap[genre.toLowerCase().replace(/\\s+/g, \"\")];\n      if (!genreId) {\n        return [`Sorry, I don’t recognize the genre \"${genre}\". Try action, comedy, etc.`];\n      }\n      const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_genres=${genreId}&sort_by=popularity.desc&page=1`);\n      const data = await res.json();\n      if (data.results && data.results.length > 0) {\n        return data.results.slice(0, 5).map(movie => movie.title);\n      } else {\n        return [\"No movies found for that genre.\"];\n      }\n    } catch (err) {\n      console.error(err);\n      return [\"Oops! Something went wrong fetching movies.\"];\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n\n    // Bot thinking\n    const botReply = await fetchMovies(input.trim());\n    const botMessage = {\n      text: `Here are some ${input} movies:\\n- ${botReply.join(\"\\n- \")}`,\n      sender: \"bot\"\n    };\n    setMessages([...newMessages, botMessage]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a genre...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"XPUXmE6uBzLg6MMJd/6fEru333M=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","text","sender","input","setInput","TMDB_API_KEY","fetchMovies","genre","genreMap","action","comedy","horror","romance","drama","animation","thriller","adventure","fantasy","sciencefiction","genreId","toLowerCase","replace","res","fetch","data","json","results","length","slice","map","movie","title","err","console","error","handleSend","trim","newMessages","botReply","botMessage","join","className","children","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/weather_chatbot/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hi! Tell me a movie genre (like action, comedy, horror).\", sender: \"bot\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const TMDB_API_KEY = \"ec6c2a746087c45423e615ea556b7e4a\"; // replace with your TMDB key\r\n\r\n  const fetchMovies = async (genre) => {\r\n    try {\r\n      // Map genre names to TMDB genre IDs\r\n      const genreMap = {\r\n        action: 28,\r\n        comedy: 35,\r\n        horror: 27,\r\n        romance: 10749,\r\n        drama: 18,\r\n        animation: 16,\r\n        thriller: 53,\r\n        adventure: 12,\r\n        fantasy: 14,\r\n        sciencefiction: 878\r\n      };\r\n\r\n      const genreId = genreMap[genre.toLowerCase().replace(/\\s+/g, \"\")];\r\n\r\n      if (!genreId) {\r\n        return [`Sorry, I don’t recognize the genre \"${genre}\". Try action, comedy, etc.`];\r\n      }\r\n\r\n      const res = await fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_genres=${genreId}&sort_by=popularity.desc&page=1`\r\n      );\r\n      const data = await res.json();\r\n\r\n      if (data.results && data.results.length > 0) {\r\n        return data.results.slice(0, 5).map((movie) => movie.title);\r\n      } else {\r\n        return [\"No movies found for that genre.\"];\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      return [\"Oops! Something went wrong fetching movies.\"];\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    // Add user message\r\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n\r\n    // Bot thinking\r\n    const botReply = await fetchMovies(input.trim());\r\n    const botMessage = { text: `Here are some ${input} movies:\\n- ${botReply.join(\"\\n- \")}`, sender: \"bot\" };\r\n\r\n    setMessages([...newMessages, botMessage]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a genre...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}